// server.js
const express = require("express");
const cors = require("cors");

const app = express();
const PORT = process.env.PORT || 3000;

// --- Middleware ---
app.use(cors());
app.use(express.json()); // Parse JSON bodies

// --- In-memory "database" ---
let students = []; // { id, name, age, course }
let nextId = 1;

// --- Routes ---

// GET all students
app.get("/students", (req, res) => {
  res.json(students);
});

// GET a single student by ID
app.get("/students/:id", (req, res) => {
  const student = students.find(s => s.id === parseInt(req.params.id));
  if (!student) return res.status(404).json({ message: "Student not found" });
  res.json(student);
});

// POST (Add a new student)
app.post("/students", (req, res) => {
  const { name, age, course } = req.body;

  if (!name || !age || !course) {
    return res.status(400).json({ message: "All fields (name, age, course) are required" });
  }

  const newStudent = { id: nextId++, name, age, course };
  students.push(newStudent);
  res.status(201).json(newStudent);
});

// PUT (Update a student)
app.put("/students/:id", (req, res) => {
  const student = students.find(s => s.id === parseInt(req.params.id));
  if (!student) return res.status(404).json({ message: "Student not found" });

  const { name, age, course } = req.body;
  if (name) student.name = name;
  if (age) student.age = age;
  if (course) student.course = course;

  res.json(student);
});

// DELETE (Remove a student)
app.delete("/students/:id", (req, res) => {
  const index = students.findIndex(s => s.id === parseInt(req.params.id));
  if (index === -1) return res.status(404).json({ message: "Student not found" });

  const deletedStudent = students.splice(index, 1);
  res.json(deletedStudent[0]);
});

// --- Start Server ---
app.listen(PORT, () => {
  console.log(âœ… Student API running on http://localhost:${PORT});
});
